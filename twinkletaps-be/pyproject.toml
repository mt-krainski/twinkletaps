[tool.poetry]
name = "twinkletaps-be"
version = "0.1.0"
description = "Twinkletaps Backend"
authors = ["Mateusz Krainski <mateusz@krainski.eu>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12"
django = "^5.2"
djangorestframework = "^3.16.1"
markdown = "^3.8"
django-filter = "^25.1"
requests = "^2.32.4"
pytest = "^8.4.1"
pytest-django = "^4.11.1"


[tool.poetry.group.dev.dependencies]
darglint = "^1.8.1"
flake8 = "^7.3.0"
flake8-bandit = "^4.1.1"
flake8-bugbear = "^24.12.12"
flake8-builtins = "^2.5.0"
flake8-comprehensions = "^3.16.0"
flake8-docstrings = "^1.7.0"
flake8-eradicate = "^1.5.0"
flake8-isort = "^6.1.2"
flake8-spellcheck = "^0.28.0"
pep8-naming = "^0.15.1"
flake8-pyproject = "^1.2.3"
black = "^25.1.0"
flake8-black = "^0.3.6"
isort = "^6.0.1"
django-extensions = "^4.1"
coverage = "^7.10.2"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.flake8]
max-line-length = 88
dictionaries = ["en_US", "python", "technical", "django"]
builtins-ignorelist = ["id"]
ignore = ["D104", "D100", "D101", "D106"]
per-file-ignores = """
  **/migrations/*: E501
"""

[tool.isort]
include_trailing_comma = true
force_grid_wrap = 0
line_length = 88
profile = "black"
known_first_party = ["twinkletaps_be"]

[tool.poe]
envfile = ".env"

[tool.poe.tasks]
configure = "./scripts/configure.sh"
manage = "python ./scripts/manage.py"
lint = "flake8 twinkletaps_be settings scripts"
generate-secret = 'python -c "import secrets; print(secrets.token_urlsafe())"'
test = 'coverage run -m pytest --showlocals'

[tool.poe.tasks.test-full]
sequence = [
  { cmd = "./scripts/try-runserver.sh" },
  { ref = "test" }
]