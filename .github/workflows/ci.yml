name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: write

jobs:
  build-web-app:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Install pipx
        run: |
          sudo apt-get update
          sudo apt-get install -y pipx
          pipx ensurepath
          export PATH=/root/.local/bin:$PATH
      - name: Install Pyenv and Python
        run: |
          curl https://pyenv.run | bash
          export PYENV_ROOT="$HOME/.pyenv"
          [[ -d $PYENV_ROOT/bin ]] && export PATH="$PYENV_ROOT/bin:$PATH"
          eval "$(pyenv init -)"
          pyenv install 3.11
      - name: Install Poetry and Poe
        run: |
          pipx install poetry
          pipx install poethepoet
      - name: Install Dependencies
        working-directory: ./web-app
        run: |
          poetry install

  build-twinkletaps-be:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v4
      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
          version: ${{ vars.POETRY_VERSION }}
      - name: Install Poe
        run: |
          pipx install poethepoet
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: twinkletaps-be/.venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('./twinkletaps-be/poetry.lock') }}
      - name: Install dependencies
        working-directory: ./twinkletaps-be
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root
      - name: Install project
        working-directory: ./twinkletaps-be
        run: |
          poe configure
          poetry install --no-interaction
      - name: Run tests
        working-directory: ./twinkletaps-be
        run: |
          source .venv/bin/activate
          poe manage migrate
          poe test-full
      - name: Run lint
        working-directory: ./twinkletaps-be
        run: |
          source .venv/bin/activate
          poe lint

  build-twinkletaps-ui:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: "Install nvm and npm"
        run: |
          export NVM_DIR="$HOME/.nvm"
          [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
          nvm install 20
      - name: "Install dependencies"
        working-directory: ./twinkletaps-ui
        run: |
          export NVM_DIR="$HOME/.nvm"
          [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
          nvm use 20
          npm install
      - name: "Build"
        working-directory: ./twinkletaps-ui
        run: |
          npm run build
      - name: "Test E2E (built)"
        working-directory: ./twinkletaps-ui
        run: |
          npm run test:e2e
      - name: "Lint"
        working-directory: ./twinkletaps-ui
        run: |
          npm run lint

  dependabot:
    name: 'Dependabot'
    needs: [build-web-app, build-twinkletaps-be, build-twinkletaps-ui]
    runs-on: ubuntu-latest
    if: ${{ github.actor == 'dependabot[bot]' && github.event_name == 'pull_request'}}
    steps:
      - name: Dependabot metadata
        id: metadata
        uses: dependabot/fetch-metadata@v2
        with:
          github-token: '${{ secrets.GITHUB_TOKEN }}'
      - name: Enable auto-merge for Dependabot PRs
        run: gh pr merge --auto --merge "$PR_URL"
        env:
          PR_URL: ${{github.event.pull_request.html_url}}
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}